Inscripción masiva [2019-07-15 22:22 josee]
 - Se prepara lógica de inscripción masiva
 - tiene javascript para agregar y eliminar filas dinamicamente
Fuente EJ: https://www.encodedna.com/javascript/dynamically-add-remove-rows-to-html-table-using-javascript-and-save-data.htm

Filtrado de Materias [2019-07-14 23:57 josee]
 - Se prepara filtrado y búsqueda de Materias
 - Se extraen funcionalidades de calificaciones a controller correspondiente
 - Se prepara menú de gestión de materias


Filtrado de Usuarios [2019-07-14 12:48 josee]
 - Se prepara filtrado de usuario por tipoDeusuarios
 - Corrección de banner e index

Filtrado de Usuarios [2019-07-14 00:41 josee]
 - Se prepara funcionalidad de búsqueda
 - Se elimina boostrap3 y se agrega fontawe (by internet)

Materias/Cursos: Borrado/ modificación[2019-07-13 21:24 josee]
- Materias/Cursos: Se prepara método de borrado/ modificación
- Materias/Cursos: Inscripción un alumno

Modificación Cursos - Eliminar Calificación[2019-07-13 19:49 josee]
 - Se prepara modificación de Materias/Cursos
 - Se prepara modificación de Calificaciones
  
Alta Calificaciones [2019-07-12 01:15 josee]
 - Se prepara alta de calificaciones (individuales)
 	DAO/Service: Se agregan métodos para validar
 	Controller: Se desarrolla lógica (CursoCotroller)
 - readonly y disable no funcionan cuando se hace submit:
 	El primero lo pone en null y el último no envía los datos


Modificación usuarios [2019-07-11 01:25 josee]
 - Se preparan y prueban las funcionalidades de modificación de datos usuario
 - Seteando el ID a modificar se soluciona el error:
	TransientObjectException The given object has a null identifier update
 - BUGfix: Se agregan restricciones de permisos en la pantalla de inicio

Modif Masiva - Calificaciones [2019-07-09 23:48 josee]
 - Se prepara modificación de calificaciones


Modif Masiva - Calificaciones [2019-07-09 23:01 josee]
 - Se prepara modificación masiva de calificaciones
 - Utilizar vista de grilla para alumno

Alta masiva - Calificaciones [2019-07-09 19:14 josee]
 - Se implementa ejemplo de https://viralpatel.net/blogs/spring-mvc-multi-row-submit-java-list/
 - Se realizan pruebas de obtención en Controller
 	1: <td><name="objCalificacionForm.listaCalificaciones[${status.index}].idCursoCalif" 	input type="number"	value="${objCalificacion.idCursoCalif}"		readonly/></td>
 	2: <td><form:input path="listaCalificaciones[${status.index}].nota" 					type="number" 		value="${objCalificacion.nota}"						/></td>
 - Se desarrolla casteo de calificaciones hibernate a validator
 + Queda implementar los controles de la forma mencionada en el punto DOS

Listar Materias/Calificaciones [2019-07-06 23:38 josee]
 - Se prepara y verifica la carga de materias por usuario (Admin/logueado))
 - Se verifica que también se carguen las calificaciones de la materia seleccionada

Alta Usuario v3 [2019-07-05 22:58 josee]
 - Se termina de dar de alta a un usuario (Sin listas de cursos/calificaciones como atributos)
 - Se realizan pruebas de javax.validator y obtención de datos

Materia Alta finalizado [2019-07-05 22:30 josee]
 - Se agregan validaciones y cargas de objetos referencias para completar la carga de una Materia/Curso
 - Se agrega validator a Pom, ya valida las constraints definidas en la clase validator
 - Se agrega método de obtención usuario por DNI

Calificacion - Materia v2 AltaModif[2019-07-05 16:23 je95744]
 - Se prepara circuito de modificaciones de calificaciones
 * Probar "cargarMateriasUsuarioLoad" y "listarMateriasCursosProfe"
	

Calificacion - Materias v1 [2019-07-04 18:02 je95744]
 - Se preparan formularios de listado y modificación de calificaciones
 - Se preparan DAO/Service de CursosCalificaciones
 - Se modifica clase Usuario para que tenga listas de Calificaciones y Cursos
 - Se sube DER y un ejemplo html para girar texto


Usuario Validaciones - Alta Usuario [2019-07-03 16:21 ]
 - Se agregan mensajes de validacion a la clase UsuarioValidator
 - Se prepara método para validar las constraints utilizadas en clases Validator

Alta Usuario v2 [2019-07-03 00:30 ]
- Se realizan pruebas de javax.validator y obtención de datos
+ Verificar causa del error badRequest para la fechaNac y idTipoUsuario (Object)


Reestructura - Borrado de ejemplos usuario v2 [2019-07-01 23:22]
 - Se renombran Implementaciones de Usuarios

Borrado de ejemplos usuario v1 [2019-07-01 23:22]
 - *Se borra ejemplo de Usuarios*

Listado de usuarios [2019-07-01 23:00]
 - Se modifica listado de usuarios
 - Se implementa funcionalidad de obtener id por parámetro url


DAO/Service: TipoExamen [2019-07-01 14:46]
 - Se agregan DAO y Servicio de tipo de Examen 

Session Usuario [2019-06-30 22:41]
 - Se agrega gestión de inicio y cierre de session con HttpSession 


Alta Materia/Curso v1 [2019-06-30 19:42 ]
 - Se corrigen las referencias de carga del formulario de "AltaMateria" 
	

Alta Usuario v1 [2019-06-30 18:20 ]
 - Se preparan DAOs e Interfaces de TipoUsuario, TipoPeriodo y Cursos
 - Se verifica la carga del desplegable del formulario de "AltaUsuario"


Login Usuario v1 [2019-06-30 15:02 josee]
 - Se preapran funcionalidades DAO
 - Se obtienen valores por POST 
 - Se agregan referencias de Session (Queda validar)
 - Se elimina fontAwesome de Google y recursos no necesarios de Web-Design

	
Estructura Web Diseño[2019-06-30 00:11]
- Se agrega referencia de recursos
- Se cambia versión de web.xml relacionado al DynamicWebProject de ProjectFacets
- Se reemplaza nombre de proyecto


