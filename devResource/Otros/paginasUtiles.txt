Sublime
	Sublime-Plugin getCurrentDate
	http://www.seanbehan.com/how-to-create-a-date-time-snippet-in-sublime-text-2-dynamic-signature-with-time-stamp/
	Sublime-Plugin installPackageControl
	https://stackoverflow.com/questions/26014966/sublime-3-error-installing-package-control#answer-26020689
	https://www.shopify.com/partners/blog/sublime-text-plugins-2018

Tomcat 8
https://stackoverflow.com/questions/8520267/http-status-404-the-requested-resource-is-not-available
http://javasolutionsguide.blogspot.com/2016/07/TomcatNoResourcesThatCanBeAddedOrRemoved.html

Spring Attributes: Session
	http://fruzenshtein.com/spring-mvc-session-advanced/

Spring Attributes: VALIDATOR
	https://mvnrepository.com/artifact/javax.validation/validation-api/1.1.0.Final
	https://stackoverflow.com/questions/44755789/spring-validation-how-to-retrieve-errors-rejectvalue-in-my-contoller
	https://stackoverflow.com/questions/9978199/annotation-regex
	https://docs.jboss.org/hibernate/validator/4.1/reference/en-US/html/validator-usingvalidator.html#validator-usingvalidator-validate
	https://docs.jboss.org/hibernate/validator/5.1/reference/en-US/html/chapter-message-interpolation.html#section-special-characters
	
Spring - HTTP Status 400 – Bad Request Spring MVC
	https://stackoverflow.com/questions/45126970/http-status-400-bad-request-spring-mvc?answertab=votes#tab-top
	https://stackoverflow.com/questions/44820798/spring-mvc-how-to-get-the-value-of-forminput-path-from-jsp-to-controller

JAVA Environment
	https://www.ntu.edu.sg/home/ehchua/programming/howto/JDK_HowTo.html#Set-JAVA_HOME
	https://www.ntu.edu.sg/home/ehchua/programming/android/Android_HowTo.html

Hibernate
	https://stackoverflow.com/questions/836569/what-do-refresh-and-merge-mean-in-terms-of-databases
	https://stackoverflow.com/questions/31318788/cascadetype-vs-fetchtype
	https://thoughts-on-java.org/best-practices-many-one-one-many-associations-mappings/

JAVA 
	- MostrarFecha en input date:
		https://stackoverflow.com/questions/4587208/how-to-display-a-date-by-using-cout-tag-in-some-format

Table HTML - Add rows
	https://www.encodedna.com/javascript/dynamically-add-remove-rows-to-html-table-using-javascript-and-save-data.htm
	http://javahonk.com/spring-mvc-add-multiple-rows/
	
Spring
1) Crear proyecto

ClickDer en el proyecto  -> JavaEE Tools -> Generate Deployment Descriptor Stub
https://stackoverflow.com/questions/34699338/how-to-generate-the-web-xml-deployment-descriptor-stub-in-an-existing-eclipse-pr/34699339

2) "web.xml"	ESCUCHAS 
	en WebContent/WEB-INF  Copiar el contenido del archivo (Recomendado no modificar para seguir las convenciones):
	<welcome-file>		petici�n a iniciar
	<servlet> 			tiene el dispatcher Servlet para redireccionar
	<context-param> 	Se debe encontrar"applicationContext.xml"
	<listener>			hace de "oreja" al escuchar las peticiones
	<servlet-mapping>	escucha solo acciones de las extensiones definidas en <url.pattern> 

3) "spring-servlet.xml" RESPUESTAS
	3.1) una vez generado el "web.xml" configurar el paquete de los controladores
		<context:component-scan base-package="frgp.utn.edu.ar.controllers">
	3.2) Se definen los tipos de datos donde devolver respuestas del controlador 
		<bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		
3.3) Esta etiqueta sirve para definir los recursos como archivos css, js, etc...
	<mvc:resources location="/web-design/**" mapping="/web-design/**"/>
(https://www.youtube.com/watch?v=h9N2fU_cDgg)

Ejecuci�n-Spring
1) "web.xml"     
	<welcome-file>IrLogin.html</welcome-file>

2) Controlador mapeado 	@RequestMapping("IrLogin.html")
3) ModelAndView								=	Servlet-comparaci�n igualdades/equivalencias
	agrega un objeto 						
	y setea la vista a la que tiene que ir (El nombre del jsp) 
	---------------------------------------------------------------------------------
	MV.addObject("obj", obj)				=	setAttribute("obj", obj)
	MV.setViewName("Usuarios");				=	dispatcher("listarUsuarios.jsp") 
											
4) "spring-servlet.xml"
	En la carpeta configurada, busca la vista seteada a ser redireccionada:
		<property name="prefix" value="WEB-INF/jsp/"></property>

5) 	Se crea una interfaz que llama, mediante un bean, a una clase que lo implementa 
	@Autowired
	public  UsuarioServicio service; //Es una interface : UsuarioServicio
	
6) Llega al contenedor de beans "applicationContext.xml" que completa la interface UsuarioDaoImpl con un "sessionFactory"
	---------------------------------------------------------------------------------
	UsuarioServicioImpl implements UsuarioServicio{
		private UsuarioDao dataAccess = null;
	---------------------------------------------------------------------------------
	<bean id="serviceBean" class="frgp.utn.edu.ar.servicioImpl.UsuarioServicioImpl">
		<property name="dataAccess" ref="dataAccessBean"></property>
	</bean>
	
	<bean id="dataAccessBean" class="frgp.utn.edu.ar.daoImpl.UsuarioDaoImpl" 
		scope="singleton"> 
		<property name="sessionFactory" ref="sessionFactoryBean"></property> 
	</bean>
	---------------------------------------------------------------------------------

7) El bean env�a a UsuarioDaoImpl el par�metro "sessionFactory" para setear HibernateTemplate
8) Seteada la conexi�n

CONEXI�N DE BBDD
1) La conexi�n est� dada por los configuraci�n de los siguientes beans:
	1.1)<bean id="sessionFactoryBean"
			class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
			<property name="dataSource" ref="dataSourceBean" />
			 
	1.2)
		<!-- Define un dataSource, en este bean se configura los parametros de la db -->
			<bean id="dataSourceBean"
				class="org.springframework.jdbc.datasource.DriverManagerDataSource">
				<property name="driverClassName" value="com.mysql.jdbc.Driver" />
				<property name="url" value="jdbc:mysql://localhost:3306/EjemploProgAvanzadaII?createDatabaseIfNotExist=true" />
				<property name="username" value="root" />
				<property name="password" value="root" />
			</bean>	
			
2) el transaction manager es el que tiene a configuraci�n del "sessionFactory"
	<!-- Transaction Manager -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactoryBean"></property>
	</bean>

	<!-- Para que lea los metodos anotados con @Transactional -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	 

 

PASAJE DE DATOS POST Y GET
POST
	1) Env�a los datos que est�n dentro de una etiqueta <form> 
		obtiene los datos en variables que tengan el mismo nombre que tiene el atributo "name" 

			<form action="altaUsuario.html" method="post">
				<input name="nombreU"/>
				<input name="passU"/>
				<input type="submit" name="btnAceptar" value="Aceptar">
			</form>


	2)	
		@RequestMapping(value ="/altaUsuario.html" , method= { RequestMethod.GET, RequestMethod.POST})
		public ModelAndView validarUsuario(String nombreU, String passU){


	0) 	Tambi�n se puede obtener como un objeto si su clase tiene el constructor con par�metros
		@RequestMapping(value ="/altaUsuario.html" , method= { RequestMethod.GET, RequestMethod.POST})
		public ModelAndView validarUsuario(Usuario objUsuario){

 GET 
 Se sigue obteniendo por url
 
 	<td><a href="<c:url value='/delete-user-${item.id}' />"  >delete</a></td>
 
 
 	@RequestMapping(value = { "/delete-user-{ssoId}" }, method = RequestMethod.GET)
    public ModelAndView deleteUser(@PathVariable Integer ssoId) {